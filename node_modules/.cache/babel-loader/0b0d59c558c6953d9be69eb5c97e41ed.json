{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u0435\\u043D\\u0438\\u0441\\\\Desktop\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\goit-react-hw-04-hooks-feedback\\\\src\\\\component\\\\Feedback\\\\Feedback.jsx\";\nimport React, { Component } from \"react\";\nimport Сontrollers from \"./Сontrollers\";\nimport Statistics from \"../Statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good / this.countTotalFeedback() * 100);\n    };\n\n    this.handleIncrementGood = () => {\n      this.setState({\n        good: this.state.good + 1\n      });\n    };\n\n    this.handleIncrementNeutral = () => {\n      this.setState({\n        neutral: this.state.neutral + 1\n      });\n    };\n\n    this.handleIncrementBad = () => {\n      this.setState({\n        bad: this.state.bad + 1\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      const result = good + neutral + bad;\n      return result;\n    };\n  }\n\n  // countTotalFeedback = () => {\n  //   return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  // };\n  render() {\n    const total = this.countTotalFeedback();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Сontrollers, {\n        good: this.handleIncrementGood,\n        neutral: this.handleIncrementNeutral,\n        bad: this.handleIncrementBad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: this.state.good,\n        neutral: this.state.neutral,\n        bad: this.state.bad,\n        total: this.countTotalFeedback(),\n        positiveFeedback: total === 0 ? 0 : this.countPositiveFeedbackPercentage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Feedback;","map":{"version":3,"sources":["C:/Users/Денис/Desktop/Портфолио/goit-react-hw-04-hooks-feedback/src/component/Feedback/Feedback.jsx"],"names":["React","Component","Сontrollers","Statistics","Feedback","state","good","neutral","bad","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","handleIncrementGood","setState","handleIncrementNeutral","handleIncrementBad","result","render","total"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADuB;;AAAA,SAO/BC,+BAP+B,GAOG,MAAM;AACtC,aAAOC,IAAI,CAACC,KAAL,CAAY,KAAKN,KAAL,CAAWC,IAAX,GAAkB,KAAKM,kBAAL,EAAnB,GAAgD,GAA3D,CAAP;AACD,KAT8B;;AAAA,SAW/BC,mBAX+B,GAWT,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AADZ,OAAd;AAGD,KAf8B;;AAAA,SAiB/BS,sBAjB+B,GAiBN,MAAM;AAC7B,WAAKD,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GAAqB;AADlB,OAAd;AAGD,KArB8B;;AAAA,SAuB/BS,kBAvB+B,GAuBV,MAAM;AACzB,WAAKF,QAAL,CAAc;AACZN,QAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,GAAX,GAAiB;AADV,OAAd;AAGD,KA3B8B;;AAAA,SA6B/BI,kBA7B+B,GA6BV,MAAM;AACzB,YAAM;AAAEN,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,YAAMY,MAAM,GAAGX,IAAI,GAAGC,OAAP,GAAiBC,GAAhC;AACA,aAAOS,MAAP;AACD,KAjC8B;AAAA;;AAmC/B;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKP,kBAAL,EAAd;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,WAAD;AACE,QAAA,IAAI,EAAE,KAAKC,mBADb;AAEE,QAAA,OAAO,EAAE,KAAKE,sBAFhB;AAGE,QAAA,GAAG,EAAE,KAAKC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,UAAD;AACE,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,QAAA,KAAK,EAAE,KAAKI,kBAAL,EAJT;AAKE,QAAA,gBAAgB,EACdO,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,KAAKV,+BAAL;AANtB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA9D8B;;AAiEjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Сontrollers from \"./Сontrollers\";\nimport Statistics from \"../Statistics\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  handleIncrementGood = () => {\n    this.setState({\n      good: this.state.good + 1,\n    });\n  };\n\n  handleIncrementNeutral = () => {\n    this.setState({\n      neutral: this.state.neutral + 1,\n    });\n  };\n\n  handleIncrementBad = () => {\n    this.setState({\n      bad: this.state.bad + 1,\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  // countTotalFeedback = () => {\n  //   return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  // };\n\n  render() {\n    const total = this.countTotalFeedback();\n    return (\n      <div>\n        <h1>Please leave feedback</h1>\n\n        <Сontrollers\n          good={this.handleIncrementGood}\n          neutral={this.handleIncrementNeutral}\n          bad={this.handleIncrementBad}\n        />\n\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positiveFeedback={\n            total === 0 ? 0 : this.countPositiveFeedbackPercentage()\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}